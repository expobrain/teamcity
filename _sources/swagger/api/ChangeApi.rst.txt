dohq_teamcity.ChangeApi
######################################

.. note::

   + All ``serve_*`` method have aliases with get: ``serve_something`` == ``get_something``
   + Some API have ``get`` method - default method to get object by locator (e.g ``agent_api.get('id:123')`` return ``Agent`` model by id
   + See more examples on page :doc:`/examples/api/ChangeApi` and model examples
   + This is autogenerated page, don't change them directly, use template. Read more in :doc:`/development`

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Method
     - HTTP request
   * - :ref:`get_change_attributes`
     - **GET** ``/app/rest/changes/{changeLocator}/attributes``
   * - :ref:`get_change_duplicates`
     - **GET** ``/app/rest/changes/{changeLocator}/duplicates``
   * - :ref:`get_change_field`
     - **GET** ``/app/rest/changes/{changeLocator}/{field}``
   * - :ref:`get_change_first_builds`
     - **GET** ``/app/rest/changes/{changeLocator}/firstBuilds``
   * - :ref:`get_change_issue`
     - **GET** ``/app/rest/changes/{changeLocator}/issues``
   * - :ref:`get_change_parent_revisions`
     - **GET** ``/app/rest/changes/{changeLocator}/parentRevisions``
   * - :ref:`get_change_vcs_root`
     - **GET** ``/app/rest/changes/{changeLocator}/vcsRoot``
   * - :ref:`get_change_vcs_root_instance`
     - **GET** ``/app/rest/changes/{changeLocator}/vcsRootInstance``
   * - :ref:`get_parent_changes`
     - **GET** ``/app/rest/changes/{changeLocator}/parentChanges``
   * - :ref:`get_related_build_types`
     - **GET** ``/app/rest/changes/{changeLocator}/buildTypes``
   * - :ref:`serve_change`
     - **GET** ``/app/rest/changes/{changeLocator}``
   * - :ref:`serve_changes`
     - **GET** ``/app/rest/changes``

.. _get_change_attributes:

get_change_attributes
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.get_change_attributes(change_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_change_attributes: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Entries <../models/Entries.html>`_

`Back to top <#>`_

.. _get_change_duplicates:

get_change_duplicates
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.get_change_duplicates(change_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_change_duplicates: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Changes <../models/Changes.html>`_

`Back to top <#>`_

.. _get_change_field:

get_change_field
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    field = 'field_example' # str | 

    try:
        api_response = tc.change_api.get_change_field(change_locator, field)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_change_field: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **field**
     - **str**
     - 

Return type:
    **str**

`Back to top <#>`_

.. _get_change_first_builds:

get_change_first_builds
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.get_change_first_builds(change_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_change_first_builds: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Builds <../models/Builds.html>`_

`Back to top <#>`_

.. _get_change_issue:

get_change_issue
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 

    try:
        api_response = tc.change_api.get_change_issue(change_locator)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_change_issue: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 

Return type:
    `Issues <../models/Issues.html>`_

`Back to top <#>`_

.. _get_change_parent_revisions:

get_change_parent_revisions
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 

    try:
        api_response = tc.change_api.get_change_parent_revisions(change_locator)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_change_parent_revisions: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 

Return type:
    `Items <../models/Items.html>`_

`Back to top <#>`_

.. _get_change_vcs_root:

get_change_vcs_root
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.get_change_vcs_root(change_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_change_vcs_root: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `VcsRootInstance <../models/VcsRootInstance.html>`_

`Back to top <#>`_

.. _get_change_vcs_root_instance:

get_change_vcs_root_instance
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.get_change_vcs_root_instance(change_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_change_vcs_root_instance: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `VcsRootInstance <../models/VcsRootInstance.html>`_

`Back to top <#>`_

.. _get_parent_changes:

get_parent_changes
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.get_parent_changes(change_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_parent_changes: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Changes <../models/Changes.html>`_

`Back to top <#>`_

.. _get_related_build_types:

get_related_build_types
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.get_related_build_types(change_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->get_related_build_types: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `BuildTypes <../models/BuildTypes.html>`_

`Back to top <#>`_

.. _serve_change:

serve_change
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        change_locator = 'change_locator_example' # str | 
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.serve_change(change_locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->serve_change: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **change_locator**
     - **str**
     - 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Change <../models/Change.html>`_

`Back to top <#>`_

.. _serve_changes:

serve_changes
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        project = 'project_example' # str |  (optional)
    build_type = 'build_type_example' # str |  (optional)
    build = 'build_example' # str |  (optional)
    vcs_root = 'vcs_root_example' # str |  (optional)
    since_change = 'since_change_example' # str |  (optional)
    start = 789 # int |  (optional)
    count = 56 # int |  (optional)
    locator = 'locator_example' # str |  (optional)
    fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.change_api.serve_changes(project=project, build_type=build_type, build=build, vcs_root=vcs_root, since_change=since_change, start=start, count=count, locator=locator, fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling ChangeApi->serve_changes: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **project**
     - **str**
     - [optional] 
   * - **build_type**
     - **str**
     - [optional] 
   * - **build**
     - **str**
     - [optional] 
   * - **vcs_root**
     - **str**
     - [optional] 
   * - **since_change**
     - **str**
     - [optional] 
   * - **start**
     - **int**
     - [optional] 
   * - **count**
     - **int**
     - [optional] 
   * - **locator**
     - **str**
     - [optional] 
   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Changes <../models/Changes.html>`_

`Back to top <#>`_

