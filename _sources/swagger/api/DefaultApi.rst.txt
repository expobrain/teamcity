dohq_teamcity.DefaultApi
######################################

.. note::

   + All ``serve_*`` method have aliases with get: ``serve_something`` == ``get_something``
   + Some API have ``get`` method - default method to get object by locator (e.g ``agent_api.get('id:123')`` return ``Agent`` model by id
   + See more examples on page :doc:`/examples/api/DefaultApi` and model examples
   + This is autogenerated page, don't change them directly, use template. Read more in :doc:`/development`

.. list-table::
   :widths: 20 80
   :header-rows: 1

   * - Method
     - HTTP request
   * - :ref:`serve_api_version`
     - **GET** ``/app/rest/apiVersion``
   * - :ref:`serve_build_field_short`
     - **GET** ``/app/rest/{projectLocator}/{btLocator}/{buildLocator}/{field}``
   * - :ref:`serve_plugin_info`
     - **GET** ``/app/rest/info``
   * - :ref:`serve_root`
     - **GET** ``/app/rest``
   * - :ref:`serve_version`
     - **GET** ``/app/rest/version``

.. _serve_api_version:

serve_api_version
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        api_response = tc.default_api.serve_api_version()
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DefaultApi->serve_api_version: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    **str**

`Back to top <#>`_

.. _serve_build_field_short:

serve_build_field_short
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        project_locator = 'project_locator_example' # str | 
    bt_locator = 'bt_locator_example' # str | 
    build_locator = 'build_locator_example' # str | 
    field = 'field_example' # str | 

    try:
        api_response = tc.default_api.serve_build_field_short(project_locator, bt_locator, build_locator, field)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DefaultApi->serve_build_field_short: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **project_locator**
     - **str**
     - 
   * - **bt_locator**
     - **str**
     - 
   * - **build_locator**
     - **str**
     - 
   * - **field**
     - **str**
     - 

Return type:
    **str**

`Back to top <#>`_

.. _serve_plugin_info:

serve_plugin_info
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

        fields = 'fields_example' # str |  (optional)

    try:
        api_response = tc.default_api.serve_plugin_info(fields=fields)
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DefaultApi->serve_plugin_info: %s\n" % e)



.. list-table::
   :widths: 20 20 60
   :header-rows: 1

   * - Name
     - Types
     - Notes

   * - **fields**
     - **str**
     - [optional] 

Return type:
    `Plugin <../models/Plugin.html>`_

`Back to top <#>`_

.. _serve_root:

serve_root
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        api_response = tc.default_api.serve_root()
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DefaultApi->serve_root: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    **str**

`Back to top <#>`_

.. _serve_version:

serve_version
-----------------

.. code-block:: python

    from pprint import pprint
    from dohq_teamcity import TeamCity, ApiException

    # username/password authentication
    tc = TeamCity("https://teamcity.example.com", auth=('username', 'password'))

    
    try:
        api_response = tc.default_api.serve_version()
       pprint(api_response)
    except ApiException as e:
        print("Exception when calling DefaultApi->serve_version: %s\n" % e)


This endpoint does not need any parameter.

Return type:
    **str**

`Back to top <#>`_

